// <auto-generated />
using System;
using BlazorTickets.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorTickets.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220905143202_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlazorTickets.Domain.Entities.SystemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(150)")
                        .HasColumnOrder(7);

                    b.Property<string>("Mail")
                        .HasColumnType("varchar(300)")
                        .HasColumnOrder(8);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("SystemGroups");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Department")
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(9);

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(150)")
                        .HasColumnOrder(7);

                    b.Property<string>("Mail")
                        .HasColumnType("varchar(300)")
                        .HasColumnOrder(8);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("SystemUsers");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnOrder(8);

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnOrder(10);

                    b.Property<int?>("OwnerGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerUserId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestedForId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StatusDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(14);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnOrder(7);

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("OwnerGroupId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("RequestedForId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.TicketAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnOrder(10);

                    b.Property<string>("FileContentType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(7);

                    b.Property<string>("FileLocalPath")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnOrder(9);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(8);

                    b.Property<long?>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketAttachments");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.TicketHistoryLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ChangeSystemDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(12);

                    b.Property<string>("ChangeUserDesc")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnOrder(11);

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<int?>("DelegatedGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("NewStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("OldStatusId")
                        .HasColumnType("int");

                    b.Property<long?>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("DelegatedGroupId");

                    b.HasIndex("NewStatusId");

                    b.HasIndex("OldStatusId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketHistorylogs");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.TicketMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnOrder(7);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Fm")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnOrder(8);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(10);

                    b.Property<long?>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnOrder(9);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketMessages");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(6);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("TicketStatuses");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(6);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("TicketTypes");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("BlazorTickets.Domain.Entities.SystemGroup", "OwnerGroup")
                        .WithMany()
                        .HasForeignKey("OwnerGroupId");

                    b.HasOne("BlazorTickets.Domain.Entities.SystemUser", "OwnerUser")
                        .WithMany()
                        .HasForeignKey("OwnerUserId");

                    b.HasOne("BlazorTickets.Domain.Entities.SystemUser", "RequestedFor")
                        .WithMany()
                        .HasForeignKey("RequestedForId");

                    b.HasOne("BlazorTickets.Domain.Entities.TicketStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("BlazorTickets.Domain.Entities.TicketType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("OwnerGroup");

                    b.Navigation("OwnerUser");

                    b.Navigation("RequestedFor");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.TicketAttachment", b =>
                {
                    b.HasOne("BlazorTickets.Domain.Entities.Ticket", "Ticket")
                        .WithMany("Attachments")
                        .HasForeignKey("TicketId");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.TicketHistoryLog", b =>
                {
                    b.HasOne("BlazorTickets.Domain.Entities.SystemUser", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("BlazorTickets.Domain.Entities.SystemGroup", "DelegatedGroup")
                        .WithMany()
                        .HasForeignKey("DelegatedGroupId");

                    b.HasOne("BlazorTickets.Domain.Entities.TicketStatus", "NewStatus")
                        .WithMany()
                        .HasForeignKey("NewStatusId");

                    b.HasOne("BlazorTickets.Domain.Entities.TicketStatus", "OldStatus")
                        .WithMany()
                        .HasForeignKey("OldStatusId");

                    b.HasOne("BlazorTickets.Domain.Entities.Ticket", "Ticket")
                        .WithMany("HistoryLogs")
                        .HasForeignKey("TicketId");

                    b.Navigation("ChangedBy");

                    b.Navigation("DelegatedGroup");

                    b.Navigation("NewStatus");

                    b.Navigation("OldStatus");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.TicketMessage", b =>
                {
                    b.HasOne("BlazorTickets.Domain.Entities.Ticket", "Ticket")
                        .WithMany("Messages")
                        .HasForeignKey("TicketId");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorTickets.Domain.Entities.Ticket", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("HistoryLogs");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
